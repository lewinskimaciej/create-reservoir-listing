/**
 * Generated by orval v6.20.0 üç∫
 * Do not edit manually.
 * beam-reservoir API
 * You are viewing the reference docs for the beam-reservoir API.        For a more complete overview with guides and examples, check out the <a href='https://reservoirprotocol.github.io'>Reservoir Protocol Docs</a>.
 * OpenAPI spec version: 5.296.1
 */
import type { CustomRoyalties } from './customRoyalties';
import type { Model448 } from './model448';
import type { MarketplaceFees } from './marketplaceFees';
import type { Options } from './options';
import type { Model449Orderbook } from './model449Orderbook';
import type { Model449OrderKind } from './model449OrderKind';

export interface Model449 {
  /** Bid on a particular attribute key. This is case sensitive. Example: `Composition` */
  attributeKey?: string;
  /** Bid on a particular attribute value. This is case sensitive. Example: `Teddy (#33)` */
  attributeValue?: string;
  /** If true, royalty amounts and recipients will be set automatically. */
  automatedRoyalties?: boolean;
  /** Bid on a particular collection with collection-id. Example: `0x8d04a8c79ceb0889bdd12acdf3fa9d207ed3ff63` */
  collection?: string;
  currency?: string;
  customRoyalties?: CustomRoyalties;
  /** If true flagged tokens will be excluded */
  excludeFlaggedTokens?: boolean;
  /** Unix timestamp (seconds) indicating when listing will expire. Example: `1656080318` */
  expirationTime?: string;
  fees?: Model448;
  /** Unix timestamp (seconds) indicating when listing will be listed. Example: `1656080318` */
  listingTime?: string;
  marketplaceFees?: MarketplaceFees;
  /** Optional. Set a custom nonce */
  nonce?: string;
  options?: Options;
  /** Orderbook where order is placed. Example: `Reservoir` */
  orderbook?: Model449Orderbook;
  /** Optional API key for the target orderbook */
  orderbookApiKey?: string;
  /** Exchange protocol used to create order. Example: `seaport-v1.5` */
  orderKind?: Model449OrderKind;
  /** Quantity of tokens to bid on. */
  quantity?: number;
  /** Set a maximum amount of royalties to pay, rather than the full amount. Only relevant when using automated royalties. 1 BPS = 0.01% Note: OpenSea does not support values below 50 bps. */
  royaltyBps?: number;
  /** Optional. Random string to make the order unique */
  salt?: string;
  /** Bid on a particular token. Example: `0x8d04a8c79ceb0889bdd12acdf3fa9d207ed3ff63:123` */
  token?: string;
  /** Bid on a particular token set. Cannot be used with cross-posting to OpenSea. Example: `token:CONTRACT:TOKEN_ID` representing a single token within contract, `contract:CONTRACT` representing a whole contract, `range:CONTRACT:START_TOKEN_ID:END_TOKEN_ID` representing a continuous token id range within a contract and `list:CONTRACT:TOKEN_IDS_HASH` representing a list of token ids within a contract. */
  tokenSetId?: string;
  /** When true, will use permit to avoid approvals. */
  usePermit?: boolean;
  /** Amount bidder is willing to offer in the smallest denomination for the specific currency. Example: `1000000000000000000` */
  weiPrice: string;
}
