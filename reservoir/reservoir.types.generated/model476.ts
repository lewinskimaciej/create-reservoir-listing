/**
 * Generated by orval v6.20.0 üç∫
 * Do not edit manually.
 * beam-reservoir API
 * You are viewing the reference docs for the beam-reservoir API.        For a more complete overview with guides and examples, check out the <a href='https://reservoirprotocol.github.io'>Reservoir Protocol Docs</a>.
 * OpenAPI spec version: 5.296.1
 */
import type { AlternativeCurrencies } from './alternativeCurrencies';
import type { Model476ExecutionMethod } from './model476ExecutionMethod';
import type { Model467 } from './model467';
import type { Model475 } from './model475';
import type { Model476SwapProvider } from './model476SwapProvider';

export interface Model476 {
  /** If true, inactive orders will not be skipped over (only relevant when filling via a specific order id). */
  allowInactiveOrderIds?: boolean;
  alternativeCurrencies?: AlternativeCurrencies;
  /** Advanced use case to pass personal blurAuthToken; the API will generate one if left empty. */
  blurAuth?: string;
  /** Mint comment (where suported) */
  comment?: string;
  /** Currency to be used for purchases. */
  currency?: string;
  /** The chain id of the purchase currency */
  currencyChainId?: number;
  /** Exclude orders that can only be filled by EOAs, to support filling with smart contracts. If marked `true`, blur will be excluded. */
  excludeEOA?: boolean;
  executionMethod?: Model476ExecutionMethod;
  feesOnTop?: Model467;
  /** If true, all fills will be executed through the router (where possible) */
  forceRouter?: boolean;
  items: Model475;
  /** Optional custom gas settings. Includes base fee & priority fee in this limit. */
  maxFeePerGas?: string;
  /** Optional custom gas settings. */
  maxPriorityFeePerGas?: string;
  /** Charge any missing royalties. */
  normalizeRoyalties?: boolean;
  /** If true, only the path will be returned. */
  onlyPath?: boolean;
  /** Optional OpenSea API key used for filling. You don't need to pass your own key, but if you don't, you are more likely to be rate-limited. */
  openseaApiKey?: string;
  /** If true, any off-chain or on-chain errors will be skipped. */
  partial?: boolean;
  /** Referrer address (where supported) */
  referrer?: string;
  /** Address of wallet relaying the fill transaction (paying for the NFT). */
  relayer?: string;
  /** If true, balance check will be skipped. */
  skipBalanceCheck?: boolean;
  /** Filling source used for attribution. Example: `reservoir.market` */
  source?: string;
  /** Choose a specific swapping provider when buying in a different currency (defaults to `uniswap`) */
  swapProvider?: Model476SwapProvider;
  /** Address of wallet filling (receiver of the NFT). */
  taker: string;
  /** When true, will use permit to avoid approvals. */
  usePermit?: boolean;
  /** Optional X2Y2 API key used for filling. */
  x2y2ApiKey?: string;
}
